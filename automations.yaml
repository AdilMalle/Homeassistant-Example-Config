####################################################
#                                                  #
#             Let's Encrypt Renewal                #
#                                                  #
####################################################
- id: letsencrypt-renewal
  alias: "Let's Encrypt Renewal"
  initial_state: 'on'
  trigger:
  - platform: time
    at: '00:00:00'
  action:
  - service: hassio.addon_restart
    data:
      addon: core_letsencrypt
  - service: notify.notify
    data_template:
      message: >
        "Let's Encrypt CA was Renewed"

####################################################
#                                                  #
#                   Greetings                      #
#                                                  #
####################################################

- id: People-gretting
  alias: 'People Greeting'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - device_tracker.nico_nico
        #- device_tracker.mamma_mamma
        #- device_tracker.iphonemarie
      from: 'not_home'
      to: 'home'
      for:
        minutes: 2
  action:
    - service: script.jarvis_notify
      data_template:
        value1: >
          {% set person = trigger.entity_id.split('.')[1]|replace('_', ' ')%}
          {%- macro greeting_sentence(person) -%}
          {{ [
          "Ben Tornato a casa " ~ person,
          "Chi è tornato a casa? "  ~ person +" è tornata a casa!",
          "Attenzione: " ~ person + " è a casa.",
          "Ben tornato a casa " ~ person + ".  Ci sei mancato molto.. forse.",
          "Ora la nostra casa è al completo, Riposati e rilassati.. Bentornato!" ~ person,
          "La vita è come una canzone, sei tornato a casa tua. Benvenuto a casa " ~ person,
          "Ehilà " ~ person + " bentornato!",
          person ~ "! Sei a casa!"
          ] | random }}
          {%- endmacro -%}
          "{{greeting_sentence(person)}}"
    - service: media_player.alexa_tts
      data:
        entity_id: media_player.nicolos_bose_home_speaker_500
        #source: HDMI1

####################################################
#                                                  #
#                   Lights                         #
#                                                  #
####################################################

####################################################
#               Lights Self Shutdown               #
####################################################

- id: light-self-shutdown
  alias: Lights Self Shutdown
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - light.room_nico_rgb
      to: 'on'
      for: '00:30:00'
    - platform: state
      entity_id:
        - light.kitchen_white
      to: 'on'
      for: '01:00:00'
    - platform: state
      entity_id:
        - light.living_door_rgb
        - light.living_sofa_rgb
        - light.living_window_white
      to: 'on'
      for: '02:00:00'
  action:
    - service: light.turn_off
      data_template:
        entity_id: " {{ trigger.entity_id }} "
    - service: notify.notify
      data_template:
        message: >
          "{{ trigger.to_state.attributes.friendly_name }} just changed from {{ trigger.to_state.state }}
          to {{ trigger.from_state.state }}. Self Shutdown!"

####################################################
#            Lights Midnight Shutdown              #
####################################################
- id: light-midnight-shutdown
  alias: 'Turn off Light at Midnight'
  initial_state: 'on'
  trigger:
    platform: time
    at: '23:59:00'
  action:
   service: homeassistant.turn_off
   entity_id: group.lights

####################################################
#            Lights Turn On Nico                   #
####################################################

- id: light-on-room-nico
  alias: 'Turn on Light - WeekDays - Morning - Nicos Room '
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.nicosgs6
    to: 'home'
  condition:
    condition: time
    after: '07:00:00'
    before: '10:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
   service: homeassistant.turn_on
   entity_id: light.room_nico_rgb

####################################################
#              Lights ON Sunset                    #
####################################################
- id: light-on-sunset
  alias: 'Light on Sunset'  
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "-00:15:00"
  condition:
    condition: state
    entity_id: group.family
    state: home
  action:
   - service: homeassistant.turn_on
     entity_id: group.lights
   - service: notify.notify
     data:
       message: "Sunset - Lights ON at {{ states('sensor.date_time') }}"
####################################################
#                                                  #
#                   Notify                         #
#                                                  #
####################################################
####################################################
#                  Update Notify                   #
####################################################

- id: notify-update
  alias: Update Available Notifications
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: notify.notify
    data:
      message: "Home Assistant  {{ states.updater.updater.state }}  is now available."

####################################################
#                  Bad Logins                      #
####################################################

- id: bad-logins
  alias: Login Failure
  initial_state: 'on'
  hide_entity: True
  trigger:
    platform: template
    value_template: "{{ states('persistent_notification.httplogin') != 'authentication' }}"
  action:
   service: notify.notify
   data:
     message: 'Bad Login.. There was a Hack attempt! Go Check the GUI for details.'

####################################################
#                  Today's Chef                    #
####################################################
- id: notify-today-chef
  alias: Who Cook
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.who_cooks
  action:
    - service: notify.notify
      data_template:
        message: >
           "Today Cook {{ trigger.to_state.state }}"

####################################################
#                  Battery                         #
#                Notifications                     #
####################################################

####################################################
#                  Nico Battery                    #
####################################################

- id: notify-nico-battery-low
  alias: Nico Battery Low - Notification
  initial_state: 'on'
  trigger:
     platform: time_pattern    
     # You can also match on interval. This will match every 45 minutes
     minutes: '/45'
     seconds: 00

  condition:
     condition: or
     conditions:
       - condition: template
         value_template: "{{ states.device_tracker.nico_nico.attributes.battery < 30 }}" 

  action:
    - service: notify.notify
      data:
        message: "Nico's Telephone is on low Battery at {{ states('sensor.date_time') }}"
    - service: notify.notify
      data:
        message: "Nico's Telephone Battery Level is {{ states('sensor.batteria_telefono_nico') }}%"

####################################################
#                  Mom Battery                     #
####################################################

- id: notify-mamma-battery-low
  alias: Mamma Battery Low - Notification
  initial_state: 'on'
  trigger:
     platform: time_pattern
     # You can also match on interval. This will match every 45 minutes
     minutes: '/45'
     seconds: 00

  condition:
     condition: or
     conditions:
       - condition: template
         value_template: "{{ states.device_tracker.mamma_mamma.attributes.battery < 30 }}"

  action:
    - service: notify.notify
      data:
        message: "Mom's Telephone is on low Battery at {{ states('sensor.date_time') }}"
    - service: notify.notify
      data:
        message: "Mom's Telephone Battery Level is {{ states('sensor.batteria_telefono_mamma') }}%"

####################################################
#                  Hass Start                      #
####################################################

- id: notify-hass-start
  alias: Home Assistant Start - Notify
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  action:
    service: notify.notify
    data:
      message: "Home Assistant Start at {{ states('sensor.date_time') }}"

####################################################
#                  Hass Stop                       #
####################################################

- id: notify-hass-stop
  alias: Home Assistant Stop - Notify
  initial_state: 'on'
  trigger:
    platform: event
    event_type: homeassistant_stop
  action:
    service: notify.notify
    data:
      message: "Home Assistant Stop at {{ states('sensor.date_time') }}"

####################################################
#                   Zone                           #
#                Notifications                     #
####################################################

####################################################
#                   Mom  Home                      #
####################################################

- id: zone-mamma-home
  alias: Mamma at Home - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     event: enter
     zone: zone.home
     entity_id: device_tracker.mamma_mamma
  action:
   service: notify.notify
   data:
     message: "Mamma is at Home at {{ states('sensor.date_time') }}"

####################################################
#                   Mom Out Home                   #
####################################################

- id: zone-mamma-out-home
  alias: Mamma Outside Home - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     event: leave
     zone: zone.home
     entity_id: device_tracker.mamma_mamma
  action:
   service: notify.notify
   data:
     message: "Mamma is going out at {{ states('sensor.date_time') }}"

####################################################
#                   Maria  Home                    #
####################################################

- id: zone-maria-home
  alias: Maria at Home - Notification
  initial_state: 'on'
  trigger:
     platform: state
     entity_id: device_tracker.iphonemarie
     from: 'not_home'
     to: 'home'
  action:
   service: notify.notify
   data:
     message: "Maria is at Home {{ states('sensor.date_time') }}"

####################################################
#               Maria out Home                     #
####################################################

- id: zone-maria-out-home
  alias: Maria Outside Home - Notification
  initial_state: 'on'
  trigger:
     platform: state
     entity_id: device_tracker.iphonemarie  #device_tracker.iphonemarie_2
     #from: 'home'
     to: 'not_home'
     for: '00:15:00'
  action:
   service: notify.notify
   data:
     message: "Maria is going out at {{ states('sensor.date_time') }}"

####################################################
#                  Nico Home                       #
####################################################

- id: zone-nico-home
  alias: Nico at Home - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     entity_id: device_tracker.nico_nico
     zone: zone.home
     event: enter
  condition:
     condition: time
     after: '07:00:00'
     before: '23:59:00'
  action:
   service: notify.notify
   data:
     message: "Nico is at Home at {{ states('sensor.date_time') }}"

####################################################
#                  Nico Out Home                   #
####################################################

- id: zone-nico-out-home
  alias: Nico is going out - Notificationù
  initial_state: 'on'
  trigger:
     platform: zone
     entity_id: device_tracker.nico_nico     
     zone: zone.home
     event: leave
  condition:
     condition: time
     after: '07:00:00'
     before: '23:59:00'         
  action:
   service: notify.notify
   data:
     message: "Nico is going out from Home at {{ states('sensor.date_time') }}"

####################################################
#                  Nico Casetta                       #
####################################################

- id: zone-nico-casetta
  alias: Nico at Home - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     entity_id: device_tracker.nico_nico
     zone: zone.casetta
     event: enter
  condition:
     condition: time
     after: '07:00:00'
     before: '23:59:00'
  action:
   service: notify.notify
   data:
     message: "Nico is at Casetta at {{ states('sensor.date_time') }}"     


####################################################
#               Nico Out Casetta                   #
####################################################

- id: zone-nico-out-casetta
  alias: Nico is going out - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     entity_id: device_tracker.nico_nico     
     zone: zone.casetta
     event: leave
  condition:
     condition: time
     after: '07:00:00'
     before: '23:59:00'         
  action:
   service: notify.notify
   data:
     message: "Nico is going out from Casetta at {{ states('sensor.date_time') }}"


####################################################
#                  Nico Dad                        #
####################################################

- id: zone-nico-dad-home
  alias: Nico at Papa's Home - Notification
  initial_state: 'on'
  trigger:
     platform: zone
     event: enter
     zone: zone.papa
     entity_id: device_tracker.nico_nico
  action:
   service: notify.notify
   data:
     message: "Nico is at Papa's Home at {{ states('sensor.date_time') }}"

####################################################
#                  Nico Out Dad                    #
####################################################

- id: zone-nico-out-dad-home
  alias: Nico leaving Papa's Home - Notification
  initial_state: 'on'
  trigger:
      platform: zone
      event: leave
      zone: zone.papa
      entity_id: device_tracker.nico_nico
  action:
    service: notify.notify
    data:
      message: "Nico is going out from Papa's Home {{ states('sensor.date_time') }}"

####################################################
#                  Nico Work                       #
####################################################

- id: zone-nico-work
  alias: Nico at Work - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: enter
    zone: zone.work
    entity_id: device_tracker.nico_nico
  condition:
    condition: time
    after: '07:00:00'
    before: '20:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  -  service: notify.notify
     data:
       message: "Nico at Work at {{ states('sensor.date_time') }}"
       
####################################################
#                Nico Work tigre                   #
####################################################

- id: zone-nico-work-tigre
  alias: Nico at Work (Tigre) - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: enter
    zone: zone.tigre
    entity_id: device_tracker.nico_nico
  condition:
    condition: time
    after: '07:00:00'
    before: '20:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  -  service: notify.notify
     data:
       message: "Nico at Work at {{ states('sensor.date_time') }}"
       

####################################################
#                Nico out Work                     #
####################################################

- id: zone-nico-out-work
  alias: Nico out from Work - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: leave
    zone: zone.work
    entity_id: device_tracker.nico_nico
  condition:
    condition: time
    after: '07:00:00'
    before: '20:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
   - service: notify.notify
     data:
       message: "Nico is going out from Work at {{ states('sensor.date_time') }}"

####################################################
#                Nico out Tigre                    #
####################################################

- id: zone-nico-out-tigre
  alias: Nico out from Work (Tigre)) - Notification
  initial_state: 'on'
  trigger:
    platform: zone
    event: leave
    zone: zone.tigre
    entity_id: device_tracker.nico_nico
  condition:
    condition: time
    after: '07:00:00'
    before: '20:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
   - service: notify.notify
     data:
       message: "Nico is going out from Work at {{ states('sensor.date_time') }}"


####################################################
#                Notify Sunrise                    #
####################################################

- id: notify-sunrise
  alias: Notify on sunrise
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:00:00'
  action:
    # Actions are scripts so can also be a list of actions
    - service: notify.notify
      data:
        message: "Beautiful sunrise!"
    - service: notify.notify
      data:
        message: "The sun is up. Wake Up! {{ states('sensor.date_time') }}"

####################################################
#                Notify Sunset                     #
####################################################

- id: notify-sunset
  alias: Notify on sunset
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: '+00:00:00'
  action:
    # Actions are scripts so can also be a list of actions
    - service: notify.notify
      data:
        message: "Beautiful sunset!"
    - service: notify.notify
      data:
        message: "Oh wow you really missed something great. {{ states('sensor.date_time') }}"

####################################################
#                                                  #
#                   Scenes                         #
#                                                  #
####################################################


####################################################
#                Air Conditioner                   #
####################################################
####################################################
#                Notify Sunset                     #
####################################################
- id: scene-ac-mode-off
  alias: AC Mode OFF - Automation
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Power Off"
  action:
    - service: switch.turn_off
      entity_id: switch.air_conditioner_heat_30
    - service: notify.notify
      data_template:
        message: >
           "AC Mode changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-hot
  alias: AC Mode - Hot
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Hot"
  action:
    - service: switch.turn_on
      entity_id: switch.air_conditioner_heat_30
    - service: notify.notify
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-hot-morning
  alias: AC Mode - Hot Morning
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Hot Morning"
  action:
    - service: notify.notify
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-cold
  alias: AC Mode - Cold
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Cold"
  action:
    - service: switch.turn_on
      entity_id: switch.air_conditioner_cold_18
    - service: notify.notify
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-cold-morning
  alias: AC Mode - Cold Morning
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Cold Morning"
  action:
    - service: notify.notify
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-humidity
  alias: AC Mode - Humidity
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Himidity"
  action:
    - service: switch.turn_on
      entity_id: switch.air_conditioner_humidity
    - service: notify.notify
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

- id: scene-ac-mode-humidity-morning
  alias: AC Mode - Humidity Morning
  trigger:
    platform: state
    entity_id: input_select.ac_mode
    to: "Humidity Morning"
  action:
    - service: notify.notify
      data_template:
        message: >
           "AC Mode  changed to: {{ trigger.to_state.state }}"

####################################################
#                     Room                         #
#                    Living                        #
####################################################
- id: living-bright
  alias: Living Brightness
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_number.Living_bright
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.living_door_rgb
        brightness: '{{ states.input_number.Living_bright.state | int }}'

    - service: light.turn_on
      data_template:
        entity_id: light.living_door_rgb
        brightness: '{{ states.input_number.Living_bright.state | int }}'

####################################################
#                                                  #
#                   PC States                      #
#                                                  #
####################################################
####################################################
#                   PC restart                     #
####################################################

- id: pc-restart
  alias: pc_restart
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: "Restart"
  action:
   - service: shell_command.restart_pc
   - service: notify.notify
     data:
       message: "PC Restart at {{ states('sensor.date_time') }}"  

####################################################
#                   PC Shutdown                    #
####################################################

- id: pc-shutdown
  alias: pc_shutdown
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: "Shutdown"
  action:
   - service: shell_command.shutdown_pc
   - service: notify.notify
     data:
       message: "PC Shutdown at {{ states('sensor.date_time') }}"

####################################################
#                   PC Sleep                       #
####################################################

- id: pc-sleep
  alias: pc_sleep
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: "Sleep"
  action:
   - service: shell_command.sleep_pc
   - service: notify.notify
     data:
       message: "PC Sleep at {{ states('sensor.date_time') }}"

####################################################
#                   PC Hibernate                   #
####################################################

- id: pc-hibernate
  alias: pc_hibernate
  trigger:
    platform: state
    entity_id: input_select.pcoptions
    to: "Hibernate"
  action:
   - service: shell_command.hibernate_pc
   - service: notify.notify
     data:
       message: "PC Hibernated at {{ states('sensor.date_time') }}"

####################################################
#                                                  #
#            Home-System Health Check              #
#                                                  #
####################################################
####################################################
#                A/C Self Shutdown                 #
####################################################

- id: ac-self-shutdown
  alias: AC Self Shutdown - Heat
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - switch.air_conditioner_heat_30
        - switch.air_conditioner_cold_18
        - switch.air_conditioner_humidity
      to: 'on'
      for: '02:00:00'
  action:
    - service: switch.turn_off
      data_template:
        entity_id: " {{ trigger.entity_id }} "
    - service: notify.notify
      data_template:
        message: >
          "{{ trigger.to_state.attributes.friendly_name }} just changed from {{ trigger.to_state.state }}
          to {{ trigger.from_state.state }} - AC Selfshutdown Notify"

####################################################
#                TTS Clear Cache                   #
####################################################

- id: TTS-flush-cache
  alias: Flush TTS Cache
  initial_state: 'on'
  hide_entity: True
  trigger:
    platform: time
    at: '2:35:00'
  action:
   service: tts.clear_cache

####################################################
#                                                  #
#                   Telegram                       #
#                   Keyboard                       #
####################################################

### Start Keyboard ###
- id: telegram-start
  alias: 'Telegram Start Command'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/start'
  action:
  - service: notify.notify
    data:
      message: >
       {{ [
       "Ciao, sono il tuo assistente di casa.. Ti elenco seguito la lista dei comandi disponibili",
       "Come posso esserti utile?",
       "Yes Sir!",
       "Se proprio insisti, questa è la lista dei comandi",
       "Aaaaa.. ancora qui?",
       "E' un piacere rivederti"
       ] | random }}       
      data:
        keyboard:
          - '/nico, /mamma'
          - '/nicopcon, /nicopcoff, /nicopcreboot'
          - '/ping, /camera'
          - '/start, /cp'

####################################################
#                   Camera SS                      #
####################################################
- id: telegram-camera-ss
  alias: 'Camera command'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/camera'
  action:
  - service: notify.notify
    data:
      message: 'R2 Salone - Snapshot'
  - service: script.camera_snapshot


####################################################
#                   HA restart                     #
####################################################
- id: telegram-ha-restart
  alias: 'Home Assistant restart'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/harestart'
  action:
  - service: script.restart_ha
  - service: notify.notify
    data:
      message: 'HA - Restart - Triggered'

####################################################
#              Automation reload                   #
####################################################
#- id: telegram-automation-reload
  #alias: 'Automation reload'
  #initial_state: 'on'
  #trigger:
    #platform: event
    #event_type: telegram_command
    #event_data:
      #command: '/automreload'
  #action:
  #- service: script.reload_automations
  #- service: notify.notify
    #data:
      #message: 'Automation - Reload - Triggered'

####################################################
#                   SSH Web Start                  #
####################################################
#- id: telegram-ssh-start
  #alias: 'SSH Start'
  #initial_state: 'on'
  #trigger:
    #platform: event
    #event_type: telegram_command
    #event_data:
      #command: '/sshweb'
  #action:
  #- service: notify.notify
    #data:
      #message: 'SSH Enabled... HASSIO is available at Http://x.x.x.x:7681'
  #- service: hassio.addon_start
    #data:
      #addon: "aaaaaaaaa_ssh"

####################################################
#                   SSH Web Stop                  #
####################################################
#- id: telegram-ssh-stop
  #alias: 'SSH OFF'
  #initial_state: 'on'
  #trigger:
    #platform: event
    #event_type: telegram_command
    #event_data:
      #command: '/sshoff'
  #action:
  #- service: notify.notify
    #data:
      #message: 'SSH Stopped'
  #- service: hassio.addon_stop
    #data:
      #addon: "aaaaaaaaa_ssh"
      

####################################################
#                   GPS Message                    #
####################################################

- id: telegram-nico-gps
  alias: 'GPS Notify Nico'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/nico'
  action:
  - service: notify.notify
    data:
      message: 'Nico GPS Position'
  - service: script.nico_gps_notify_telegram

- id: telegram-mom-gps
  alias: 'GPS Notify Mom'
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/mamma'
  action:
  - service: notify.notify
    data:
      message: 'Mom GPS Position'  
  - service: script.mamma_gps_notify_telegram


####################################################
#               Certificate Renew                  #
####################################################
#- id: telegram-ca-renew
  #alias: 'Certificate Renew'
  #initial_state: 'on'
  #trigger:
    #platform: event
    #event_type: telegram_command
    #event_data:
      #command: '/certificate'
  #action:
  #- service: script.letsencrypt_renew


####################################################
#                   Ping Pong                      #
####################################################
- id: telegram-ping-pong
  alias: 'Telegram bot that reply pong to ping'
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/ping'
  action:
  - service: notify.notify
    data:
      message: 'pong'

####################################################
#               Nico PC - ON/OFF                   #
####################################################

- id: telegram-nico-pc-on
  alias: 'Telegram - Nico PC ON'
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/nicopcon'
  action:
  - service: notify.notify
    data:
      message: >
       {{ [
       "Il PC è stato accesso",
       "Accendero il tuo PC nel piu breve tempo possibile!",
       "Yes Sir! Accendo subito il PC",
       "Aaaaa.. vuoi nuovamente che accendo il PC? Quanto rompi!",
       "Hmmm.. ok dai ti accendo il PC"
       "3.. 2.. 1.. ON"
       ] | random }}
  - service: switch.turn_on
    entity_id: switch.nico_computer


- id: telegram-nico-pc-off
  alias: 'Telegram - Nico PC OFF'
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/nicopcoff'
  action:
  - service: notify.notify
    data:
      message: >
       {{ [
       "Il PC è stato Spento",
       "Eddajee te lo spengooo",
       "Yes Sir! Spengo subito il PC",
       "Aaaaa.. vuoi nuovamente che spengo il PC? Quanto rompi!",
       "Hmmm.. ok dai ti spengo il PC"
       "3.. 2.. 1.. Off"
       ] | random }}
  - service: shell_command.shutdown_pc

- id: telegram-nico-pc-reboot
  alias: 'Telegram - Nico PC Reboot'
  initial_state: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/nicopcreboot'
  action:
  - service: notify.notify
    data:
      message: >
       {{ [
       "Il PC è stato Riavviato",
       "Eddajee te lo riavvio",
       "Yes Sir! Riavvio subito il PC",
       "Aaaaa.. vuoi nuovamente che riavvio il PC? Quanto rompi!",
       "Hmmm.. ok dai ti riavvio il PC"
       "3.. 2.. 1.. Reboott"
       ] | random }}
  - service: shell_command.restart_pc

####################################################
#                                                  #
#                   Telegram                       #
#                Inline Keyboard                   #
####################################################
#############################
### Start Inline Keyboard ###
#############################
- id: telegram-control-pannel-start
  alias: 'Telegram Control Pannel Command'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/cp'
  action:
  - service: notify.notify
    data:
      message: >
       {{ [
       "Home Assistant Status",
       "Control Panel",
       "Yes Sir!",
       "Home Assistant Control Panel",
       "Pannello di controllo"
       ] | random }}       
      data:
        inline_keyboard:
          - 'Lights:/lights, Status:/status, Security:/security'
          - 'System:/system, Help:/help, Ping:/ping'
          - "Addons:/addons"
          - "Gimme Pizza:/gimmepizza, No thanks:/nopizza"


####################
### IK Ping Pong ###
####################
- id: telegram-ik-ping-pong
  alias: 'telegram ping pong'
  hide_entity: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/ping'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: >-
          Callback received from {{ trigger.event.data.from_first }}.
          Message id: {{ trigger.event.data.message.message_id }}.
          Data: {{ trigger.event.data.data }}
          {{now().strftime("%H:%M:%S %Y-%m-%d")}} Pong, Message from {{ trigger.event.data["user_id"] }}.
        show_alert: true

#########################
### IK Security Alarm ###
#########################
- id: telegram-ik-security-alarm
  alias: 'Telegram Alarm'
  hide_entity: true
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: '/security'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Alarm control'
    - service: telegram_bot.edit_message
      data_template:
        message_id: 'last'
        chat_id: '{{ trigger.event.data.user_id }}'
        message: >
            {% if is_state("input_boolean.burglar_alarm_door", "off") %}Alarm is OFF. {% else %}Alarm is ON. {% endif %}
            {% if is_state("input_boolean.away_scene", "off") %}Presence simulation is OFF. {% else %}Presence simulation is ON. {% endif %}
        inline_keyboard:
          - 'Away ON:/away_on, Away OFF:/away_off'
          - 'Alarm ON:/alarm_on, Alarm OFF:/alarm_off, Cancel:/cancel'


#####################
### IK Pizza Time ###
#####################
- alias: 'Want pizza?'
  hide_entity: true
  trigger:
    platform: time
    at: '18:30:00'    
  condition:
    - condition: state
      entity_id: device_tracker.iphonemarie
      state: 'home'
    - condition: state
      entity_id: device_tracker.nico_nico
      state: 'not_home'
  action:
    - service: telegram_bot.send_message
      data_template:
        title: 'Want pizza?'
        target: telegram ID
        message: 'You look like you are home alone. Should I order you a pizza?'
        inline_keyboard:
          - "Gimme Pizza:/gimmepizza"
          - "No thanks:/nopizza"

- alias: 'No pizza'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/nopizza'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Ok, no pizza then'

- alias: 'gimme pizza'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/gimmepizza'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'PIZZA TIME'
    - service: dominos.order
      data:
        order_entity_id: dominos.medium_pan


#################
### IK Lights ###
#################
- alias: 'Lights Actions'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/lights'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'What you want to do with Lights?'  
    - service: telegram_bot.send_message
      data_template:
        title: 'Lights ON or OFF?'
        target: telegram ID
        message: 'Look like you want to turn on or off your lights. What you want to do?'
        inline_keyboard:
          - "ALL ON:/lighton, Living ON:/Living_on, Bedroom ON:/bedroom_on"
          - "ALL OFF:/lightoff, Living OFF :/Living_off, Bedroom OFF:/bedroom_off"
          - "Kitchen ON:/kitchen_on, BathRoom ON:/bath_on"
          - "Kitchen OFF:/kitchen_off, BathRoom OFF:/bath_off"

### All ligths
- alias: 'IK - Telegram - Light On'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/lighton'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Lights ON'
    - service: light.turn_on
      data:
        entity_id: group.all_lights
        brightness: 255

- alias: 'IK - Telegram - Light Off'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/lightoff'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Lights OFF'
    - service: light.turn_off
      data:
        entity_id: group.all_lights
        brightness: 0

### Living ###
- alias: 'IK - Telegram - Living Light On'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/Living_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Living Lights ON'
    - service: light.turn_on
      data:
        entity_id: group.living_lights
        brightness: 255

- alias: 'IK - Telegram - Living Light OFF'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/Living_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Living Lights OFF'
    - service: light.turn_on
      data:
        entity_id: group.living_lights
        brightness: 0

### Kitchen
- alias: 'IK - Telegram - Kitchen Light On'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/kitchen_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Kitchen Lights ON'
    - service: light.turn_on
      data:
        entity_id: group.kitchen_lights
        brightness: 255

- alias: 'IK - Telegram - Kitchen Light OFF'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/kitchen_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Kitchen Lights OFF'
    - service: light.turn_on
      data:
        entity_id: group.kitchen_lights
        brightness: 0


### Bed Room
- alias: 'IK - Telegram - BedRoom Light On'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/bedroom_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'BedRoom Lights ON'
    - service: light.turn_on
      data:
        entity_id: group.bedroom_lights
        brightness: 255

- alias: 'IK - Telegram - BedRoom Light OFF'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/bedroom_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'BedRoom Lights OFF'
    - service: light.turn_on
      data:
        entity_id: group.bedroom_lights
        brightness: 0

### Bath Room
- alias: 'IK - Telegram - BathRoom Light On'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/bath_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'BathRoom Lights ON'
    - service: light.turn_on
      data:
        entity_id: group.bathroom_lights
        brightness: 255

- alias: 'IK - Telegram - BathRoom Light OFF'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/bath_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'BathRoom Lights OFF'
    - service: light.turn_on
      data:
        entity_id: group.bath_lights
        brightness: 0


#################
### IK System ###
#################
- alias: 'HA System Actions'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/system'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'What actions you want to do on HA?'  
    - service: telegram_bot.send_message
      data_template:
        title: 'HA System Actions'
        target: telegram ID
        message: 'Look like you want to do something about your Home Assistant istance.. What you want to do?'
        inline_keyboard:
          - "Check Config:/config, Automation Reload:/automreload"
          - "SSL certificate:/ssl, SSL Renew:/sslrenew"
          - "HA Restart:/harestart, Host Reboot:/hassioreboot"
          


### Automation reload
- alias: 'IK - Telegram - Automation reload'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/automreload'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Automation Reload'
    - service: script.reload_automations
    - service: notify.notify
      data:
        message: 'Automation - Reload - Triggered'

### HA Restart
- alias: 'IK - Telegram - HA Restart'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/harestart'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'HA restart'
    - service: script.restart_ha
    - service: notify.notify
      data:
        message: 'HA - Restart - Triggered'

### SSL Renew
- alias: 'IK - Telegram - SSL Renew'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/sslrenew'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'SSL Renew'
    - service: script.letsencrypt_renew
    - service: notify.notify
      data:
        message: 'SSL - Renew - Triggered'


### Host Reboot
- alias: 'IK - Telegram - Host Reboot'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/hassioreboot'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Host Reboot'
    - service: hassio.host_reboot
    - service: notify.notify
      data:
        message: 'Host - Reboot - Triggered'


#################
### IK Addons ###
#################
- alias: 'Addons Actions'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/addons'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'What you want to do with these addons?'  
    - service: telegram_bot.send_message
      data_template:
        title: 'Addons'
        target: telegram ID
        message: 'Look like you want to turn on or off your Addons. What you want to do?'
        inline_keyboard:
          - "Web SSH ON:/webssh_on, Pi-Hole ON:/pihole_on"
          - "Web SSH OFF:/webssh_off, Pi-Hole OFF:/pihole_off"
          - "IDE ON:/ide_on, LogViewer ON:/logview_on"
          - "IDE OFF:/ide_off, LogViewer OFF:/logview_off"


### Web SSH ###
### Addon SSH Web Start
- alias: 'IK - Telegram - Addon SSH Web Start'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/webssh_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon SSH Web Start - Triggered'
    - service: hassio.addon_start
      data:
        addon: "aaaaaaaaa_ssh"
    - service: notify.notify
      data:
        message: 'SSH Enabled... Web SSH is available at Http://x.x.x.x:7681'

### Addon SSH Web Stop
- alias: 'IK - Telegram - Addon SSH Web Stop'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/webssh_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon SSH Web Stop - Triggered'
    - service: hassio.addon_stop
      data:
        addon: "aaaaaaaaa_ssh"
    - service: notify.notify
      data:
        message: 'Addon SSH Web Stopped'

### Addon Log Viewer Start
- alias: 'IK - Telegram - Addon  Log Viewer Start'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/logview_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  Log Viewer Start - Triggered'
    - service: hassio.addon_start
      data:
        addon: "aaaaaaaaa_logviewer"
    - service: notify.notify
      data:
        message: ' Log Viewer... Log Viewer is available at Http://x.x.x.x:4277'

### Addon Log Viewer Stop
- alias: 'IK - Telegram - Addon  Log Viewer Stop'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/logview_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  Log Viewer Stop - Triggered'
    - service: hassio.addon_stop
      data:
        addon: "aaaaaaaaa_logviewer"
    - service: notify.notify
      data:
        message: 'Addon  Log ViewerStopped'

### Addon Pi-Hole Start
- alias: 'IK - Telegram - Addon  Pi-Hole Start'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/logview_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  Pi-Hole Start - Triggered'
    - service: hassio.addon_start
      data:
        addon: "aaaaaaaaa_pi-hole"
    - service: notify.notify
      data:
        message: 'Pi-Hole is available at Http://x.x.x.x:4277'

### Addon Pi-Hole Stop
- alias: 'IK - Telegram - Addon  Pi-Hole Stop'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/logview_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  Pi-Hole Stop - Triggered'
    - service: hassio.addon_stop
      data:
        addon: "aaaaaaaaa_pi-hole"
    - service: notify.notify
      data:
        message: 'Addon  Pi-Hole Stopped'

### Addon IDE Start
- alias: 'IK - Telegram - Addon  IDE Start'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/ide_on'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  IDE Start - Triggered'
    - service: hassio.addon_start
      data:
        addon: "aaaaaaaaa_ide"
    - service: notify.notify
      data:
        message: 'IDE is available at Http://x.x.x.x:4277'

### Addon IDE Stop
- alias: 'IK - Telegram - Addon  IDE Stop'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/ide_off'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Addon  IDE Stop - Triggered'
    - service: hassio.addon_stop
      data:
        addon: "aaaaaaaaa_ide"
    - service: notify.notify
      data:
        message: 'Addon  IDE Stopped'

####################################################
#                                                  #
#                   Themes                         #
#                                                  #
####################################################
####################################################
#                   Sunset                         #
####################################################

- id: themes-sunset
  alias: Random Darker Theme At Sunset
  initial_state: true
  trigger:
    platform: sun
    event: sunset
  action:
    - service: frontend.set_theme
      data_template:
        name: '{{ ["darkcyan", "darkred", "midnight", "darkorange", "darkblue"] | random  }}'

####################################################
#                   Sunrise                        #
####################################################

- id: themes-sunrise
  alias: Random Lighter Theme At Sunrise
  initial_state: true
  trigger:
    platform: sun
    event: sunrise
  action:
    - service: frontend.set_theme
      data_template:
        name: '{{ ["default"] | random  }}'

####################################################
#                                                  #
#                   Log Level                      #
#                                                  #
####################################################

- id: log-level
  alias: Log Level
  trigger:
    platform: state
    entity_id: input_select.log_level
  action:
    service: logger.set_level
    data_template:
      homeassistant.components: "{{ trigger.to_state.state }}"

####################################################
#                                                  #
#                   Owntracks                      #
#                                                  #
####################################################

- id: owntracks-refresh
  alias: Owntracks Refresh
  trigger:
    - platform: time_pattern
      minutes: '/5'
      seconds: 0
  action:
    service: script.owntracks_update

####################################################
#                                                  #
#             Time Based Automation                #
#                                                  #
####################################################
####################################################
#            A/C Time Based Automations            #
####################################################
- id: ac-hot-morning-on
  alias: AC - Hot Morning - ON
  trigger:
    platform: time
    at: '07:30:00'
  condition:
   - condition: time
     weekday:
       - mon
       - tue
       - wed
       - thu
       - fri
   - condition: state
     entity_id: input_select.ac_mode
     state: "Hot Morning"
  action:
    - service: switch.turn_on
      entity_id: switch.air_conditioner_heat_30
    - service: notify.notify
      data:
        message: "AC Morning ON - Heat 30 - Automation"

- id: ac-cold-morning-on
  alias: AC - Cold Morning - ON
  trigger:
    platform: time
    at: '07:30:00'
  condition:
   - condition: time
     weekday:
       - mon
       - tue
       - wed
       - thu
       - fri
   - condition: state
     entity_id: input_select.ac_mode
     state: "Cold Morning"
  action:
    - service: switch.turn_on
      entity_id: switch.air_conditioner_cold_18
    - service: notify.notify
      data:
        message: "AC Morning ON - Cold 18 - Automation  {{ trigger.entity_id }} "

- id: ac-morning-off
  alias: AC - Morning - OFF
  trigger:
    platform: time
    at: '08:00:00'
  condition:
   - condition: time
     weekday:
       - mon
       - tue
       - wed
       - thu
       - fri
  action:
    - service: switch.turn_off
      entity_id: switch.air_conditioner_heat_30
    - service: switch.turn_off
      entity_id: switch.air_conditioner_cold_18
    - service: switch.turn_off
      entity_id: switch.air_conditioner_humidity            
    - service: notify.notify
      data:
        message: "AC Morning OFF - Automation. {{ trigger.entity_id }}"

####################################################
#                                                  #
#                    IFTTT                         #
#                                                  #
####################################################        
        
        
- alias: IFTTT - Test Notification Received 
  initial_state: 'on'
  trigger:        
    platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  action:
    service_template: '{{ trigger.event.data.service }}'
    data_template:
      entity_id: '{{ trigger.event.data.entity_id }}'


- alias: IFTTT - Startup Notification
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  action:
    service: ifttt.trigger
    data: {"event":"HA_Start", "value1":"Hello World!"}

- alias: IFTTT - Startup Notification two
  trigger:
    platform: homeassistant
    event: start
  action:
    service: script.ifttt_notify
    data_template:
      value1: 'HA Status:'
      value2: "{{ trigger.event.data.entity_id.split('_')[1] }} is "
      value3: "{{ trigger.event.data.to_state.state }}"

####################################################
#                                                  #
#                    Alarm                         #
#                                                  #
####################################################        


- alias: 'Trigger alarm while armed away'
  trigger:
    - platform: state
      entity_id: sensor.pir1
      to: 'active'
    - platform: state
      entity_id: sensor.pir2
      to: 'active'
    - platform: state
      entity_id: sensor.door
      to: 'open'
    - platform: state
      entity_id: sensor.window
      to: 'open'
  condition:
    - condition: state
      entity_id: alarm_control_panel.ha_alarm
      state: armed_away
  action:
    - service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.ha_alarm



- alias: 'Send notification when alarm triggered'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha_alarm
      to: 'triggered'
  action:
    - service: notify.notify
      data:
        message: "ALARM! The alarm has been triggered"


- alias: 'Disarm alarm when door unlocked by keypad'
  trigger:
    - platform: state
      entity_id: sensor.front_door_lock_alarm_type
      to: '19'
      # many z-wave locks use Alarm Type 19 for 'Unlocked by Keypad'
  action:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.house_alarm


####Alarm Mode Notify ###

- alias: 'Send notification when alarm is Disarmed'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'disarmed'
  action:
    - service: notify.notify
      data:
        message: "ALARM! The alarm is Disarmed at {{ states('sensor.date_time') }}"

- alias: 'Send notification when alarm is in pending status'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'pending'
  action:
    - service: notify.notify
      data:
        message: "ALARM! The alarm is in pending status at {{ states('sensor.date_time') }}"

- alias: 'Send notification when alarm is Armed in Away mode'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_away'
  action:
    - service: notify.notify
      data:
        message: "ALARM! The alarm is armed in Away mode {{ states('sensor.date_time') }}"

- alias: 'Send notification when alarm is Armed in Home mode'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: 'armed_home'
  action:
    - service: notify.notify
      data:
        message: "ALARM! The alarm is armed in Home mode {{ states('sensor.date_time') }}"
      
####################################################
#                                                  #
#                    Backups                       #
#                                                  #
####################################################          

- alias: Weekly Backup Friday at 3 AM
  initial_state: 'on'
  trigger:
    platform: time
    at: '03:00:00'
  condition:
  - condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - service: hassio.snapshot_full
    data_template:
      name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
  - service: notify.notify
    data_template:
      message: Creating backup named "Automated Backup {{ now().strftime('%Y-%m-%d') }}"


- alias: Weekly Backup to Google Friday at 3:30 AM
  initial_state: 'on'
  trigger:
    platform: time
    at: '03:30:00'
  condition:
  - condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - service: rest_command.google_backup


####################################################
#                                                  #
#               Security Breaches                  #
#                                                  #
####################################################  
####################################################
#                     Email                        #
####################################################

- alias: Notify - Emailbreach
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: group.security
    to: 'on'
  condition: []
  action:
  - service: notify.notify
    data_template:
      title: 'Security issue:'
      message: "Email address {{ trigger.to_state.attributes.friendly_name }} has been found in a compromised database: {{ trigger.to_state.attributes.breach }}."
      who: 'everyone'

####################################################
#                                                  #
#                  Earthquakes                     #
#                                                  #
####################################################  
- alias: 'Earth Quake Alert'
  initial_state: 'on'
  trigger:
    platform: geo_location
    source: usgs_earthquakes_feed
    zone: zone.earth_quake_alert_zone
    event: enter
  #condition:
    #condition: template
    #value_template: "{{ trigger.to_state.attributes.type == 'earthquake' }}"
  action:
    - service: persistent_notification.create
      data_template:
        message: "{{ trigger.to_state.name }} - {{ trigger.to_state.attributes.status }}"
        title: "Earth Quake Alert"
    - service: notify.notify
      data_template:
        message: >
          "{{ trigger.to_state.attributes.friendly_name }} Earth Quake Alert Test"
#           {{ trigger.to_state.state }}
 #         to {{ trigger.from_state.state }}. Self Shutdown!"

####################################################
#                                                  #
#                   Test Space                     #
#                                                  #
####################################################
####################################################
#                      Zoning                      #
####################################################

- alias: State Changed - Notification  
  initial_state: 'on'
  trigger:
    platform: time
    at: '05:30:00'
  condition:
     condition: or
     conditions:
       - condition: zone
         event: enter
         zone: zone.home
         entity_id: group.family
       - condition: zone
         event: leave
         zone: zone.home
         entity_id: group.family
       - condition: zone
         event: enter
         zone: zone.work
         entity_id: group.family
       - condition: zone
         event: leave
         zone: zone.work
         entity_id: group.family
  action:
    service: notify.notify
    data_template:
      message: >
        " {{ trigger.to_state.attributes.friendly_name }} just changed from {{ trigger.from_state.state }}
        to {{ trigger.to_state.state }} "
        
        
